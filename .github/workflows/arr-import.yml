run-name: "${{ github.event.client_payload.title }} Imported by ${{ github.event.client_payload.instanceName }}"
name: Arr-Stack Import

on:
  repository_dispatch:
    types: [arr-import]

permissions:
  id-token: write
  contents: write

env:
  TITLE: ${{ github.event.client_payload.title }}
  CLIENT_PAYLOAD_FILE: json_data.json
  UPDATE_SUMMARY_FILE: metadata_updates.md

jobs:
  update:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.commit-changes.outputs.sha }}
    steps:
      - name: Save Client Payload to File
        env:
          CLIENT_PAYLOAD: "${{ toJson(github.event.client_payload) }}"
        run: |
          echo "$CLIENT_PAYLOAD" > $CLIENT_PAYLOAD_FILE
          cat "$CLIENT_PAYLOAD_FILE"

      - name: Upload client payload
        uses: actions/upload-artifact@v4
        with:
          name: client_payload
          path: ${{ env.CLIENT_PAYLOAD_FILE }}
      
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set env values
        env:
          STARR_APP: ${{ github.event.client_payload.instanceName }}
          TVDB_ID: ${{ github.event.client_payload.series.tvdbId }}
          TMDB_ID: ${{ github.event.client_payload.remoteMovie.tmdbId }}
          MOVIE_YEAR: ${{ github.event.client_payload.remoteMovie.year }}
          SHOW_YEAR: ${{ github.event.client_payload.series.year }}
          MOVIE_GENRES: ${{ toJson(github.event.client_payload.movie.genres) }}
          SHOW_GENRES: ${{ toJson(github.event.client_payload.series.genres) }}
          EPISODES: ${{ toJson(github.event.client_payload.episodes) }}
          MOVIE_METADATA_FILE: movie-metadata.yml
          SHOW_METADATA_FILE: show-metadata.yml
        run: |
          if [[ $STARR_APP == "Radarr" ]]; then
            MEDIA_TYPE="movie"
            TXDB_ID="$TMDB_ID"
            RELEASE_YEAR="$MOVIE_YEAR"
            GENRES_COMMA_SPACED="$(echo "$MOVIE_GENRES" | jq -s -c .[])"
            SEASONS_COMMA_SPACED=""
            METADATA_FILE="$MOVIE_METADATA_FILE"
          else
            readarray -t seasons < <(echo "$EPISODES" | jq '.[].seasonNumber' | sort -u)
            MEDIA_TYPE="show"
            TXDB_ID="$TVDB_ID"
            RELEASE_YEAR="$SHOW_YEAR"
            GENRES_COMMA_SPACED="$(echo "$SHOW_GENRES" | jq -s -c .[])"
            SEASONS_COMMA_SPACED="$(IFS=", "; echo "${seasons[*]}")"
            METADATA_FILE="$SHOW_METADATA_FILE"
          fi
          echo "MEDIA_TYPE=$MEDIA_TYPE" >> $GITHUB_ENV
          echo "TXDB_ID=$TXDB_ID" >> $GITHUB_ENV
          echo "RELEASE_YEAR=$RELEASE_YEAR" >> $GITHUB_ENV
          echo "GENRES_COMMA_SPACED=$GENRES_COMMA_SPACED" >> $GITHUB_ENV
          echo "SEASONS_COMMA_SPACED=$SEASONS_COMMA_SPACED" >> $GITHUB_ENV
          echo "METADATA_FILE=$METADATA_FILE" >> $GITHUB_ENV
      
      - name: Update metadata file with media information
        run: |
          bash "functions/yaml/insert-media-item.sh" \
            "$MEDIA_TYPE" \
            "$TXDB_ID" \
            "$TITLE" \
            "$RELEASE_YEAR" \
            "" \
            "$GENRES_COMMA_SPACED" \
            "$SEASONS_COMMA_SPACED" \
            "$METADATA_FILE"

      - name: Sort and format metadata files
        run: |
          # Sort and format the metadata file
          bash "functions/yaml/sort-metadata-file.sh" "$METADATA_FILE"
          bash "functions/yaml/format-metadata-file.sh" "$METADATA_FILE"
      
      - name: Commit Changes to Main
        id: commit-changes
        run: |
          bash "functions/git/set-git-config.sh"
          sha=$(bash "functions/git/commit-with-summary.sh" \
                  "Updating $TITLE ($RELEASE_YEAR)" \
                  "$UPDATE_SUMMARY_FILE" \
                  "$METADATA_FILE")
          echo "sha=$sha" >> $GITHUB_OUTPUT

      - name: Create Job Summary
        run: |
          echo "## Metadata Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`diff" >> $GITHUB_STEP_SUMMARY
          cat "$UPDATE_SUMMARY_FILE" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      
  find-missing-fields:
    needs: update
    uses: "chase-roohms/kometa-configs/.github/workflows/find-missing-fields.yml@main"
    with:
      sha: ${{ needs.update.outputs.sha }}

name: Manually add Media
run-name: Manually add ${{ inputs.media_type }} ${{ inputs.title }}

on:
  workflow_dispatch:
    inputs:
      media_type:
        description: Media Type
        required: true
        type: choice
        options:
          - movie
          - show
      txdb_id:
        description: TMDb or TVDb ID
        required: true
        type: string
      url_poster:
        description: Poster URL
        required: true
        type: string
      genres:
        description: Genres, Comma Spaced
        required: true
        type: string
      studio:
        description: Studio

permissions:
  id-token: write
  contents: write

env:
  TMDB_READ_TOKEN: ${{ secrets.TMDB_READ_TOKEN }}
  TVDB_TOKEN: ${{ secrets.TVDB_TOKEN }}
  MEDIA_TYPE: ${{ inputs.media_type }}
  TXDB_ID: ${{ inputs.txdb_id }}
  URL_POSTER: ${{ inputs.url_poster }}
  GENRES_COMMA_SPACED: ${{ inputs.genres }}
  STUDIO: ${{ inputs.studio }}
  MOVIE_METADATA_FILE: movie-metadata.yml
  SHOW_METADATA_FILE: show-metadata.yml
  UPDATE_SUMMARY_FILE: metadata_updates.md

jobs:
  update:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.commit-changes.outputs.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set METADATA_FILE
        run: |
          if [[ "$MEDIA_TYPE" == "movie" ]]; then
              echo "METADATA_FILE=$MOVIE_METADATA_FILE" >> $GITHUB_ENV
          else
              echo "METADATA_FILE=$SHOW_METADATA_FILE" >> $GITHUB_ENV
          fi
      
      - name: Get movie information from TMDb
        if: ${{ env.MEDIA_TYPE == 'movie' }}
        id: get-movie
        run: |
          movie_json=$(bash "functions/tmdb/get_movie.sh" "$TXDB_ID" "$TMDB_READ_TOKEN")
          title=$(echo "$movie_json" | jq -r '.title')
          release_year=$(echo "$movie_json" | jq -r '.release_date' | cut -c1-4)

          echo "TITLE=$title" >> $GITHUB_ENV
          echo "RELEASE_YEAR=$release_year" >> $GITHUB_ENV
      
      - name: Get show information from TVDb
        if: ${{ env.MEDIA_TYPE == 'show' }}
        id: get-show
        run: |
          auth_token=$(bash "functions/tvdb/get_auth_token.sh" "$TVDB_TOKEN")
          show_json=$(bash "functions/tvdb/get_show.sh" "$TXDB_ID" "$auth_token")
          title=$(echo "$show_json" | jq -r '.data.series.name' | sed 's/ ([0-9]\{4\})$//')
          release_year=$(echo "$show_json" | jq -r '.data.series.year')
          seasons_comma_spaced=$(echo "$show_json" | jq -r '.data.episodes[] | .seasonNumber' | sort -n | uniq | tr '\n' ',' | sed 's/,$//')

          echo "TITLE=$title" >> $GITHUB_ENV
          echo "RELEASE_YEAR=$release_year" >> $GITHUB_ENV
          echo "SEASONS_COMMA_SPACED=$seasons_comma_spaced" >> $GITHUB_ENV
      
      - name: Update metadata file with media information
        run: |
          bash "functions/yaml/insert-media-item.sh" \
            "$MEDIA_TYPE" \
            "$TXDB_ID" \
            "$TITLE" \
            "$RELEASE_YEAR" \
            "$URL_POSTER" \
            "$GENRES_COMMA_SPACED" \
            "$SEASONS_COMMA_SPACED" \
            "$STUDIO" \
            "$METADATA_FILE"

      - name: Sort and format metadata files
        run: |
          # Sort and format the metadata file
          bash "functions/yaml/sort-metadata-file.sh" "$METADATA_FILE"
          bash "functions/yaml/format-metadata-file.sh" "$METADATA_FILE"
      
      - name: Commit Changes to Main
        id: commit-changes
        run: |
          bash "functions/git/set-git-config.sh"
          sha=$(bash "functions/git/commit-with-summary.sh" \
                  "Updating $TITLE ($RELEASE_YEAR)" \
                  "$UPDATE_SUMMARY_FILE" \
                  "$METADATA_FILE")
          echo "sha=$sha" >> $GITHUB_OUTPUT

      - name: Create Job Summary
        run: |
          echo "## Metadata Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`diff" >> $GITHUB_STEP_SUMMARY
          cat "$UPDATE_SUMMARY_FILE" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
